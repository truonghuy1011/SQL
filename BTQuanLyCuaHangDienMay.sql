CREATE DATABASE BTQuangLyCuaHangDienMay
USE BTQuangLyCuaHangDienMay

GO
CREATE TABLE NhaCungCap	(
	MANHACUNGCAP		NVARCHAR(50)	NOT NULL,
		CONSTRAINT	ph_NhaCungCap
		PRIMARY	KEY(MANHACUNGCAP),
	TENNHACUNGCAP		NVARCHAR(50)	NOT NULL,
	DIACHI				NVARCHAR(50)			,
	DIENTHOAI			MONEY					,
	EMAIL				NVARCHAR(50)			,
)

GO
CREATE TABLE MatHang	(
	MAHANG				NVARCHAR(50)	NOT NULL
		CONSTRAINT	ph_MatHang
		primary key(MAHANG)	,
	NHASANXUAT			NVARCHAR(50)	NOT NULL,
	TENHANG				NVARCHAR(50)	NOT NULL,
	SOLUONGMHTON		MONEY			NOT NULL,
	HSD					INT				,
	DONVITINHHSD		NVARCHAR(10)	
)

GO
CREATE TABLE NhanVien	(
	MANHANVIEN			NVARCHAR(50)	NOT NULL,
		CONSTRAINT	ph_NhanVien
		PRIMARY KEY(MANHANVIEN),
	TENNHANVIEN			NVARCHAR(50)	NOT NULL,
	NGAYSINH			DATE			NULL,
	GIOITINH			NVARCHAR(10)	NOT NULL,
	DIENTHOAI			MONEY			NULL,
	DIACHI				NVARCHAR(50)	NOT NULL,
	CHUCVU				NVARCHAR(50)	NOT NULL,
	LUONGCOBAN			MONEY			NOT NULL
)

GO
CREATE TABLE KhachHang	(
	MAKHACHHANG			NVARCHAR(50)	NOT NULL,
		CONSTRAINT	ph_KhangHang
		PRIMARY KEY(MAKHACHHANG),
	TENKHACHHANG		NVARCHAR(50)	NOT NULL,
	DIACHI				NVARCHAR(50)	NULL	,
	DIENTHOAI			MONEY			NULL
)

GO
CREATE TABLE PNhap	(
	MAPN				NVARCHAR(50)	NOT NULL,
		CONSTRAINT	ph_PNhap
		PRIMARY KEY(MAPN),
	MANHACUNGCAP		NVARCHAR(50)	NOT NULL,
		CONSTRAINT	fh_PNhap_NhaCungCap
		FOREIGN	KEY(MANHACUNGCAP)
		REFERENCES	NhaCungCap(MANHACUNGCAP)
	ON DELETE CASCADE ON UPDATE CASCADE,
	MANHANVIEN			NVARCHAR(50)	NOT NULL,
		CONSTRAINT	fh_PNhap_NhanVien
		FOREIGN	KEY(MANHANVIEN)
		REFERENCES	NhanVien(MANHANVIEN)
	ON DELETE CASCADE ON UPDATE CASCADE,
	NGAYNHAP			DATE			NOT NULL,
)

GO
CREATE TABLE CTPNhap	(
	MAPN				NVARCHAR(50)	NOT NULL,
	MAHANG				NVARCHAR(50)	NOT NULL,
	SLNHAP				INT				NOT NULL,
	THUE				FLOAT					,
	DONGIANHAP			MONEY					,
		CONSTRAINT	ph_CTPNhap
		PRIMARY KEY(MAPN, MAHANG),
		CONSTRAINT	fh_CTPNhap_MatHang
		FOREIGN KEY(MAHANG)
		REFERENCES MatHang(MAHANG)
	ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT	fh_CTPNhap_PNhap
		FOREIGN KEY(MAPN)
		REFERENCES PNhap(MAPN)
	ON DELETE CASCADE ON UPDATE CASCADE,
)

GO
CREATE TABLE PXuat	(
	MAPX				NVARCHAR(50)	NOT NULL,
		CONSTRAINT	ph_PXuat
		PRIMARY KEY(MAPX),
	NGAYXUAT			DATE			NOT NULL,
	MAKHACHHANG			NVARCHAR(50)	NOT NULL,
		CONSTRAINT	fh_PXuat_KhachHang
		FOREIGN KEY(MAKHACHHANG)
		REFERENCES KhachHang(MAKHACHHANG)
	ON DELETE CASCADE ON UPDATE CASCADE,
	MANHANVIEN			NVARCHAR(50)	NOT NULL,
		CONSTRAINT	fh_PXuat_NhanVien
		FOREIGN KEY(MANHANVIEN)
		REFERENCES NhanVien(MANHANVIEN)
	ON DELETE CASCADE ON UPDATE CASCADE,
)

GO
CREATE TABLE CTPXuat	(
	MAPX				NVARCHAR(50)	NOT NULL,
	MAHANG				NVARCHAR(50)	NOT NULL,
	SLXUAT				INT				NOT NULL,
	THUE				FLOAT					,
	DONGGIAXUAT			MONEY					,
		CONSTRAINT	ph_CTPXuat
		PRIMARY KEY(MAPX, MAHANG),
		CONSTRAINT	fh_CTPXuat_PXuat
		FOREIGN KEY(MAPX)
		REFERENCES PXuat(MAPX)
	ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT	fh_CTPXuat_MatHang
		FOREIGN KEY(MAHANG)
		REFERENCES MatHang(MAHANG)
	ON DELETE CASCADE ON UPDATE CASCADE,
)

	---------------------------//////////////////////////////////////--------------------------------

								--Stored Procdures--
GO
CREATE PROC SP_INSERT_NHACUNGCAP
	@MANHACUNGCAP		NVARCHAR(50),
	@TENNHACUNGCAP		NVARCHAR(50),
	@DIACHI				NVARCHAR(50),
	@DIENTHOAI			MONEY,
	@EMAIL				NVARCHAR(50)
AS
	IF(NOT EXISTS(SELECT MANHACUNGCAP FROM NhaCungCap WHERE MANHACUNGCAP = @MANHACUNGCAP))
	BEGIN
		INSERT		INTO	NhaCungCap		VALUES
		(@MANHACUNGCAP, @TENNHACUNGCAP, @DIACHI, @DIENTHOAI, @EMAIL)
	END
	ELSE
		RAISERROR(N'ĐÃ TỒN TẠI NHÀ CUNG CẤP NÀY', 12, 1)

GO
CREATE PROC SP_INSERT_KHACHHANG
	@MAKHACHHANG		NVARCHAR(50),
	@TENKHACHHANG		NVARCHAR(50),
	@DIACHI				NVARCHAR(50),
	@DIENTHOAI			MONEY
AS
	IF(NOT EXISTS(SELECT MAKHACHHANG FROM KhachHang WHERE MAKHACHHANG=@MAKHACHHANG))
	BEGIN
		INSERT	INTO	KhachHang	VALUES
		(@MAKHACHHANG, @TENKHACHHANG, @DIACHI, @DIENTHOAI)
	END
	ELSE
		RAISERROR(N'KHÁCH HÀNG ĐÃ TỚI MUA', 12, 1)

GO
CREATE PROC SP_INSERT_NHANVIEN
	@MANHANVIEN			NVARCHAR(50),
	@TENNHANVIEN		NVARCHAR(50),
	@NGAYSINH			DATE,
	@GIOITINH			NVARCHAR(10),
	@DIENTHOAI			MONEY,
	@DIACHI				NVARCHAR(50),
	@CHUCVU				NVARCHAR(50),
	@LUONGCOBAN			MONEY
AS
	IF(NOT EXISTS(SELECT MANHANVIEN FROM NhanVien WHERE MANHANVIEN=@MANHANVIEN))
		INSERT	INTO	NhanVien	VALUES	
		(@MANHANVIEN, @TENNHANVIEN, @NGAYSINH, @GIOITINH, @DIENTHOAI, @DIACHI, @CHUCVU, @LUONGCOBAN)
	ELSE
		RAISERROR(N'ĐÃ CÓ NHÂN VIÊN NÀY RỒI', 12, 1)

GO
CREATE PROC SP_INSERT_MATHANG
	@MAHANG				NVARCHAR(50),
	@NHASANXUAT			NVARCHAR(50),
	@TENHANG			NVARCHAR(50),
	@SOLUONGMHTON		MONEY,
	@HSD				INT,
	@DONVITINHHSD		NVARCHAR(10)
AS
	IF(NOT EXISTS(SELECT MAHANG FROM MatHang WHERE MAHANG=@MAHANG))
	BEGIN
		INSERT	INTO	MatHang	VALUES
		(@MAHANG, @NHASANXUAT, @TENHANG, @SOLUONGMHTON, @HSD, @DONVITINHHSD)
	END
	ELSE
		RAISERROR(N'ĐÃ TỒN TẠI MẶT HÀNG NÀY', 12, 1)

GO
CREATE PROC SP_INSERT_PNHAP
	@MAPN				NVARCHAR(50),
	@MANHACUNGCAP		NVARCHAR(50),
	@MANHANVIEN			NVARCHAR(50),
	@NGAYNHAP			DATE
AS
	IF(EXISTS(SELECT MAPN FROM PNhap WHERE MAPN=@MAPN))
		RAISERROR(N'ĐÃ TỒN TẠI PHIẾU NHẬP NÀY', 12, 1)
	IF(NOT EXISTS(SELECT MANHANVIEN FROM NhanVien WHERE MANHANVIEN=@MANHANVIEN))
		RAISERROR(N'KHÔNG CÓ NHÂN VIÊN NÀY TRONG CỬA HÀNG', 12, 1)
	IF(NOT EXISTS(SELECT MANHACUNGCAP FROM NhaCungCap WHERE MANHACUNGCAP=@MANHACUNGCAP))
		RAISERROR(N'CHƯA CÓ BẤT KÌ THÔNG TIN NÀO VỀ NHÀ CUNG CẤP NÀY', 12, 1)
	ELSE
		IF(@NGAYNHAP > GETDATE())
			RAISERROR(N'NGÀY NHẬP ĐÃ QUÁ NGÀY HIỆN TẠI', 12, 1)
		ELSE
			INSERT INTO PNhap VALUES
			(@MAPN, @MANHACUNGCAP, @MANHANVIEN, @NGAYNHAP)

GO
CREATE PROC SP_INSERT_PXUAT
	@MAPX				NVARCHAR(50),
	@NGAYXUAT			DATE,
	@MAKHACHHANG		NVARCHAR(50),
	@MANHANVIEN			NVARCHAR(50)
AS
	IF(EXISTS(SELECT MAPX FROM PXuat WHERE MAPX=@MAPX))
		RAISERROR(N'ĐÃ TỒN TẠI PHIẾU XUẤT NÀY', 12, 1)
	IF(NOT EXISTS(SELECT MANHANVIEN FROM NhanVien WHERE MANHANVIEN=@MANHANVIEN))
		RAISERROR(N'KHÔNG CÓ NHÂN VIÊN NÀY TRONG CỬA HÀNG', 12, 1)
	IF(NOT EXISTS(SELECT MAKHACHHANG FROM KhachHang WHERE MAKHACHHANG=@MAKHACHHANG))
		RAISERROR(N'KHÁCH HÀNG CHƯA ĐẾN MUA HÀNG', 12, 1)
	ELSE
		IF(@NGAYXUAT>GETDATE())
			RAISERROR(N'NGÀY XUẤT ĐÃ QUÁ NGÀY HIỆN TẠI', 12, 1)
		ELSE
			INSERT INTO PXuat VALUES
			(@MAPX, @NGAYXUAT, @MAKHACHHANG, @MANHANVIEN)

GO
CREATE PROC SP_INSERT_CTPNHAP
	@MAPN				NVARCHAR(50),
	@MAHANG				NVARCHAR(50),
	@SLNHAP				INT,
	@THUE				FLOAT,
	@DONGIANHAP			MONEY
AS
	IF(NOT EXISTS(SELECT MAPN FROM PNhap WHERE MAPN=@MAPN) AND NOT EXISTS(SELECT MAPN FROM CTPNhap WHERE MAPN=@MAPN))
		RAISERROR(N'KHÔNG TỒN TẠI TRONG PHIẾU NHẬP VÀ KHÔNG TỒN TẠI TRONG CHI TIẾT PHIẾU NHẬP', 12, 1)
	ELSE
		IF(NOT EXISTS(SELECT MAHANG FROM MatHang WHERE MAHANG=@MAHANG) AND NOT EXISTS(SELECT MAHANG FROM CTPNhap WHERE MAHANG=@MAHANG))
			RAISERROR(N'KHÔNG CÓ THÔNG TIN VỀ MẶT HÀNG NÀY', 12, 1)
		ELSE
			IF(@SLNHAP <= 0)
				RAISERROR(N'SỐ LƯỢNG NHẬP KHÔNG ĐƯỢC NHỎ HƠN 0 VÀ BẰNG 0', 12, 1)
			ELSE
				IF(@DONGIANHAP < 0)
					RAISERROR(N'ĐƠN GIÁ NHẬP KHÔNG ĐƯỢC NHỎ HƠN 0', 12, 1)
				ELSE	INSERT	INTO	CTPNhap	VALUES
					(@MAPN, @MAHANG, @SLNHAP, @THUE, @DONGIANHAP)

GO
CREATE PROC SP_INSERT_CTPXUAT
	@MAPX				NVARCHAR(50),
	@MAHANG				NVARCHAR(50),
	@SLXUAT				INT,
	@THUE				FLOAT,
	@DONGIAXUAT			MONEY
AS
	IF(EXISTS(SELECT MAPX FROM CTPXuat WHERE MAPX=@MAPX) AND EXISTS(SELECT MAHANG FROM CTPXuat WHERE MAHANG=@MAHANG))
		RAISERROR(N'ĐÃ TỒN TẠI TRONG PHIẾU XUẤT VÀ KHÔNG TỒN TẠI TRONG CHI TIẾT PHIẾU XUẤT', 12, 1)
	ELSE
		IF(NOT EXISTS(SELECT MAHANG FROM MatHang WHERE MAHANG=@MAHANG) AND NOT EXISTS(SELECT MAHANG FROM CTPXuat WHERE MAHANG=@MAHANG))
			RAISERROR(N'KHÔNG CÓ THÔNG TIN VỀ MẶT HÀNG NÀY', 12, 1)
		ELSE
			IF(@SLXUAT > (SELECT SOLUONGMHTON FROM MatHang WHERE MAHANG=@MAHANG))
				RAISERROR(N'SỐ LƯỢNG XUẤT KHÔNG ĐƯỢC LỚN HƠN SỐ LƯỢNG SẢN PHẨM TRONG KHO', 12, 1)
			ELSE
				INSERT	INTO	CTPXuat	VALUES
				(@MAPX, @MAHANG, @SLXUAT, @THUE, @DONGIAXUAT)

INSERT INTO MatHang 
	(MAHANG, NHASANXUAT, TENHANG, SOLUONGMHTON, HSD, DONVITINHHSD)
VALUES
	('MH1', N'Honda', N'Honda Wave Alpha 110', '5', '6', N'ĐỒNG')
INSERT INTO MatHang 
	(MAHANG, NHASANXUAT, TENHANG, SOLUONGMHTON, HSD, DONVITINHHSD)
VALUES
	('MH2', N'Honda2', N'Honda Wave2', '5', '6', N'ĐỒNG')
INSERT INTO MatHang 
	(MAHANG, NHASANXUAT, TENHANG, SOLUONGMHTON, HSD, DONVITINHHSD)
VALUES
	('MH3', N'Honda', N'Honda Wave Alpha 110', '5', '6', N'ĐỒNG')
INSERT INTO NhanVien
	(MANHANVIEN, TENNHANVIEN, NGAYSINH, GIOITINH, DIENTHOAI, DIACHI, CHUCVU, LUONGCOBAN)
VALUES
	('NV1', N'Lê Quang Vũ', '19990415', 'Nam', '0945221090', N'Tp.Hồ Chí Minh', N'Quản Lý', '10000000')
INSERT INTO NhanVien
	(MANHANVIEN, TENNHANVIEN, NGAYSINH, GIOITINH, DIENTHOAI, DIACHI, CHUCVU, LUONGCOBAN)
VALUES
	('NV2', N'Lê Quang Vũ2', '19990415', 'Nam2', '09452210902', N'Tp.Hồ Chí Minh', N'Quản Lý', '10000000')
INSERT INTO KhachHang
	(MAKHACHHANG, TENKHACHHANG, DIACHI, DIENTHOAI)
VALUES
	('KH1', N'Phạm Duy Tấn', N'Quận 9', '0945109863')
INSERT INTO KhachHang
	(MAKHACHHANG, TENKHACHHANG, DIACHI, DIENTHOAI)
VALUES
	('KH2', N'Phạm2', N'Quận 9', '0945109863')
INSERT INTO NhaCungCap
	(MANHACUNGCAP, TENNHACUNGCAP, DIACHI, DIENTHOAI, EMAIL)
VALUES
	('NCC1', 'Yamaha', N'Quận 12', '0945109542', 'yamahavip@gmail.com')
INSERT INTO NhaCungCap
	(MANHACUNGCAP, TENNHACUNGCAP, DIACHI, DIENTHOAI, EMAIL)
VALUES
	('NCC2', 'Yama2', N'Quận 12', '0945109542', 'yamahavip@gmail.com')
INSERT INTO PNhap
	(MAPN, MANHACUNGCAP, MANHANVIEN, NGAYNHAP)
VALUES
	('PN1', 'NCC1', 'NV1', '20190924')
INSERT INTO PNhap
	(MAPN, MANHACUNGCAP, MANHANVIEN, NGAYNHAP)
VALUES
	('PN2', 'NCC2', 'NV2', '20190924')
INSERT INTO PNhap
	(MAPN, MANHACUNGCAP, MANHANVIEN, NGAYNHAP)
VALUES
	('PN3', 'NCC1', 'NV2', '20190924')
INSERT INTO PXuat
	(MAPX, NGAYXUAT, MAKHACHHANG, MANHANVIEN)
VALUES
	('PX1', '20190420', 'KH1', 'NV1')
INSERT INTO PXuat
	(MAPX, NGAYXUAT, MAKHACHHANG, MANHANVIEN)
VALUES
	('PX2', '20190420', 'KH2', 'NV2')
INSERT INTO PXuat
	(MAPX, NGAYXUAT, MAKHACHHANG, MANHANVIEN)
VALUES
	('PX3', '20190420', 'KH1', 'NV2')
INSERT INTO CTPNhap
	(MAPN, MAHANG, SLNHAP, THUE, DONGIANHAP)
VALUES
	('PN1', 'MH1', '2', '3.05', '52400000')
INSERT INTO CTPNhap
	(MAPN, MAHANG, SLNHAP, THUE, DONGIANHAP)
VALUES
	('PN2', 'MH2', '2', '3.05', '52400000')
INSERT INTO CTPNhap
	(MAPN, MAHANG, SLNHAP, THUE, DONGIANHAP)
VALUES
	('PN3', 'MH1', '2', '3.05', '52400000')
INSERT INTO CTPXuat
	(MAPX, MAHANG, SLXUAT, THUE, DONGGIAXUAT)
VALUES
	('PX1', 'MH1', '1', '3.05', '58000000')
INSERT INTO CTPXuat
	(MAPX, MAHANG, SLXUAT, THUE, DONGGIAXUAT)
VALUES
	('PX2', 'MH2', '1', '3.05', '58000000')
INSERT INTO CTPXuat
	(MAPX, MAHANG, SLXUAT, THUE, DONGGIAXUAT)
VALUES
	('PX3', 'MH1', '1', '3.05', '58000000')

						--CHI TIET PHIEU NHAP--
GO
CREATE TRIGGER TG_INSERT_SLNHAP_CTPNHAPP ON CTPNhap FOR INSERT
AS	BEGIN
	DECLARE @SLNHAP INT
	SELECT @SLNHAP =SLNHAP
	FROM INSERTED
	IF((SELECT CT.SLNHAP FROM CTPNhap CT INNER JOIN INSERTED INS ON CT.SLNHAP = INS.SLNHAP) <= 0)
	BEGIN
		PRINT N'SỐ LƯỢNG NHẬP HÀNG KHÔNG ĐƯỢC NHỎ HƠN HOẶC BẰNG 0'
		ROLLBACK TRAN
	END
END

GO
CREATE TRIGGER TG_INSERT_CTPNHAP ON CTPNhap FOR INSERT
AS UPDATE MatHang
	SET MatHang.SOLUONGMHTON = MatHang.SOLUONGMHTON + INSERTED.SLNHAP
	FROM MatHang INNER JOIN INSERTED
	ON MatHang.MAHANG = INSERTED.MAHANG

GO
CREATE TRIGGER TG_UPDATE_CTPNHAP ON CTPNhap FOR UPDATE
AS
	IF UPDATE (SLNHAP)
	BEGIN
		DECLARE @MAHANG NVARCHAR(50)
		DECLARE @SLNHAP INT
		DECLARE CONTRO CURSOR FOR
			SELECT INSERTED.MAHANG, INSERTED.SLNHAP - DELETED.SLNHAP AS SLNHAP
			FROM	INSERTED	INNER JOIN DELETED
			ON (INSERTED.MAPN = DELETED.MAPN AND INSERTED.MAHANG = DELETED.MAHANG)
			OPEN CONTRO
				FETCH NEXT FROM CONTRO INTO @MAHANG, @SLNHAP
				WHILE @@FETCH_STATUS = 0
				BEGIN
					UPDATE MatHang SET SOLUONGMHTON=SOLUONGMHTON+@SLNHAP
					WHERE MAHANG=@MAHANG
					FETCH NEXT FROM CONTRO INTO @MAHANG, @SLNHAP
				END
				CLOSE CONTRO
				DEALLOCATE CONTRO
	END

GO
CREATE TRIGGER TG_DELETE_CTPNhap ON CTPNhap FOR DELETE
AS
	IF UPDATE (SLNHAP)
	BEGIN
		DECLARE @MAHANG NVARCHAR(50)
		DECLARE @SLNHAP INT
		DECLARE CONTRO CURSOR FOR
		SELECT DELETED.MAHANG, DELETED.SLNHAP AS SLNHAP FROM DELETED
		OPEN CONTRO
			FETCH NEXT FROM CONTRO INTO @MAHANG, @SLNHAP
			WHILE @@FETCH_STATUS=0
			BEGIN
				UPDATE MatHang SET SOLUONGMHTON=SOLUONGMHTON- @SLNHAP
				WHERE MAHANG=@MAHANG
				FETCH NEXT FROM CONTRO INTO @MAHANG, @SLNHAP
			END
			CLOSE CONTRO
			DEALLOCATE CONTRO
	END

GO
CREATE TRIGGER TG_INSERT_CTPXUAT ON CTPXuat FOR INSERT
AS UPDATE MatHang
	SET MatHang.SOLUONGMHTON = MatHang.SOLUONGMHTON - INSERTED.SLXUAT
	FROM MatHang INNER JOIN INSERTED
	ON MatHang.MAHANG = INSERTED.MAHANG

GO
CREATE TRIGGER TG_UPDATE_CTPXUAT ON CTPXuat FOR UPDATE
AS
	IF UPDATE(SLXUAT)
	BEGIN
		DECLARE @MAHANG NVARCHAR(50)
		DECLARE @SLXUAT INT
		DECLARE CONTRO CURSOR FOR
		SELECT INSERTED.MAHANG, INSERTED.SLXUAT - DELETED.SLXUAT AS SLXUAT
		FROM INSERTED INNER JOIN DELETED ON (INSERTED.MAPX = DELETED.MAPX) AND (INSERTED.MAHANG = DELETED.MAHANG)
		IF (@SLXUAT > (SELECT MatHang.SOLUONGMHTON FROM MatHang, INSERTED WHERE MatHang.MAHANG = INSERTED.MAHANG))
		BEGIN
			RAISERROR(N'TỔNG SỐ LƯỢNG XUẤT KHÔNG ĐƯỢC VƯỢT SỐ LƯỢNG CÓ', 12, 1)
			ROLLBACK TRAN
		END
		ELSE
		BEGIN
			OPEN CONTRO
			FETCH NEXT FROM CONTRO INTO @MAHANG, @SLXUAT
			WHILE @@FETCH_STATUS=0
			BEGIN
				UPDATE MatHang SET SOLUONGMHTON = SOLUONGMHTON-@SLXUAT
				WHERE MAHANG= @MAHANG
				FETCH NEXT FROM CONTRO INTO @MAHANG, @SLXUAT
			END
			CLOSE CONTRO
			DEALLOCATE CONTRO
		END
	END

GO
CREATE  TRIGGER TG_DELETE_CTPXUAT ON CTPXuat FOR DELETE
AS
	IF UPDATE(SLXUAT)
	BEGIN
		DECLARE @MAHANG NVARCHAR(50)
		DECLARE @SLXUAT INT
		DECLARE CONTRO CURSOR FOR
		SELECT DELETED.MAHANG, DELETED.SLXUAT AS SLXUAT
		FROM DELETED
		OPEN CONTRO
		FETCH NEXT FROM CONTRO INTO @MAHANG, @SLXUAT
		WHILE @@FETCH_STATUS=0
		BEGIN
			UPDATE MatHang SET SOLUONGMHTON=SOLUONGMHTON+@SLXUAT
			WHERE MAHANG=@MAHANG
			FETCH NEXT FROM CONTRO INTO @MAHANG, @SLXUAT
		END
		CLOSE CONTRO
		DEALLOCATE CONTRO
	END
	---------------------------//////////////////////////////////////--------------------------------
								--FuncSion--1
GO
ALTER FUNCTION FN_ThongKeHangConHayHet(@SoLuong INT)
RETURNS NVARCHAR(50)
AS
BEGIN
	IF	(@SoLuong > 0)
		RETURN N'SỐ LƯỢNG CÒN '
	ELSE IF(@SoLuong <= 0)
		RETURN N'SỐ LƯỢNG ĐÃ HẾT '
	RETURN N'KHÔNG XÁC ĐỊNH'
END

go
select MatHang.TENHANG AS N'Tên Mặt Hàng', DBO.FN_ThongKeHangConHayHet(MatHang.SOLUONGMHTON) AS N'Kiểm Tra' FROM MatHang
---------------------------//////////////////////////////////////--------------------------------
								--FuncSion--2
GO
ALTER FUNCTION FN_CTPNHAP(@SOLUONG INT, @GIANHAP MONEY)
RETURNS MONEY
AS
BEGIN
	DECLARE @TONG MONEY , @MA NVARCHAR(50)
	SELECT @MA = MH.MAHANG, @TONG = @SOLUONG * @GIANHAP
	FROM MatHang MH, CTPNhap CT
	WHERE MH.MAHANG=CT.MAHANG
	RETURN @TONG
END

GO
SELECT MatHang.MAHANG AS N'TÊN MẶT HÀNG', SUM(dbo.FN_CTPNHAP(CTPNhap.SLNHAP, CTPNhap.DONGIANHAP)) AS'TỔNG TIỀN' FROM MatHang, CTPNhap WHERE MatHang.MAHANG= CTPNhap.MAHANG GROUP BY MatHang.MAHANG
---------------------------//////////////////////////////////////--------------------------------
								--FuncSion--3
GO
ALTER FUNCTION FN_THONGKEKHDAMUAGI(@MAHANG NVARCHAR(50))
RETURNS INT
AS
	BEGIN
		DECLARE @SL INT
		SELECT @SL = COUNT(MAHANG)
		FROM CTPXuat
		WHERE MAHANG = @MAHANG
		IF(@SL IS NULL)
			SET @SL = 0
		RETURN @SL
	END

GO
SELECT MAHANG, dbo.FN_THONGKEKHDAMUAGI(MAHANG) FROM MatHangD